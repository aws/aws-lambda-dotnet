AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for API Gateway and Lambda integration tests'

Resources:
  # Lambda Functions
  ParseAndReturnBodyLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Sub '${AWS::StackName}-ParseAndReturnBodyFunction'
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            return JSON.parse(event.body);
          };
      Runtime: nodejs20.x

  ReturnRawBodyLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Sub '${AWS::StackName}-ReturnRawBodyFunction'
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event, context, callback) => {
            console.log(event);
            callback(null, event.body);
          };
      Runtime: nodejs20.x

  ReturnFullEventLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Sub '${AWS::StackName}-ReturnFullEventFunction'
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            return {
              statusCode: 200,
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(event)
            };
          };
      Runtime: nodejs20.x

  # IAM Role for Lambda Functions
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'

  # Main REST API Gateway
  MainRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: !Sub '${AWS::StackName}-MainRestAPI'
      EndpointConfiguration:
        Types:
          - REGIONAL
      BinaryMediaTypes:
        - '*/*'

  MainRestApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId: !Ref MainRestApi
      StageName: 'test'

  # Main HTTP API v1
  MainHttpApiV1:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      Name: !Sub '${AWS::StackName}-MainHttpAPIv1'
      ProtocolType: HTTP

  MainHttpV1Stage:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      ApiId: !Ref MainHttpApiV1
      StageName: '$default'
      AutoDeploy: true

  # Main HTTP API v2
  MainHttpApiV2:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      Name: !Sub '${AWS::StackName}-MainHttpAPIv2'
      ProtocolType: HTTP

  MainHttpV2Stage:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      ApiId: !Ref MainHttpApiV2
      StageName: '$default'
      AutoDeploy: true

  # Lambda Permissions for REST API
  LambdaPermissionMainRestApi:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ParseAndReturnBodyLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${MainRestApi}/*'

  LambdaPermissionMainRestApi2:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ReturnRawBodyLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${MainRestApi}/*'

  LambdaPermissionMainRestApi3:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ReturnFullEventLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${MainRestApi}/*'

  # Lambda Permissions for HTTP API v1
  LambdaPermissionMainHttpApiV1:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ParseAndReturnBodyLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${MainHttpApiV1}/*'

  LambdaPermissionMainHttpApiV12:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ReturnRawBodyLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${MainHttpApiV1}/*'

  LambdaPermissionMainHttpApiV13:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ReturnFullEventLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${MainHttpApiV1}/*'

  # Lambda Permissions for HTTP API v2
  LambdaPermissionMainHttpApiV2:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ParseAndReturnBodyLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${MainHttpApiV2}/*'

  LambdaPermissionMainHttpApiV22:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ReturnRawBodyLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${MainHttpApiV2}/*'

  LambdaPermissionMainHttpApiV23:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ReturnFullEventLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${MainHttpApiV2}/*'

Outputs:
  MainRestApiId:
    Description: 'ID of the Main REST API'
    Value: !Ref MainRestApi

  MainRestApiBaseUrl:
    Description: 'Base URL of the Main REST API'
    Value: !Sub 'https://${MainRestApi}.execute-api.${AWS::Region}.amazonaws.com/test'

  MainHttpApiV1Id:
    Description: 'ID of the Main HTTP API v1'
    Value: !Ref MainHttpApiV1

  MainHttpApiV1BaseUrl:
    Description: 'Base URL of the Main HTTP API v1'
    Value: !Sub 'https://${MainHttpApiV1}.execute-api.${AWS::Region}.amazonaws.com'

  MainHttpApiV2Id:
    Description: 'ID of the Main HTTP API v2'
    Value: !Ref MainHttpApiV2

  MainHttpApiV2BaseUrl:
    Description: 'Base URL of the Main HTTP API v2'
    Value: !Sub 'https://${MainHttpApiV2}.execute-api.${AWS::Region}.amazonaws.com'

  ParseAndReturnBodyLambdaFunctionArn:
    Description: 'ARN of the Parse and Return Body Lambda Function'
    Value: !GetAtt ParseAndReturnBodyLambdaFunction.Arn

  ReturnRawBodyLambdaFunctionArn:
    Description: 'ARN of the Return Raw Body Lambda Function'
    Value: !GetAtt ReturnRawBodyLambdaFunction.Arn

  ReturnFullEventLambdaFunctionArn:
    Description: 'ARN of the Return Full Event Lambda Function'
    Value: !GetAtt ReturnFullEventLambdaFunction.Arn
