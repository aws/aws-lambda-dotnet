AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for API Gateway and Lambda integration tests'

Resources:

  ParseAndReturnBodyLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Sub '${AWS::StackName}-ParseAndReturnBodyFunction'
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            return JSON.parse(event.body);
          };
      Runtime: nodejs20.x

  ReturnDecodedParseBinLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Sub '${AWS::StackName}-ReturnDecodedParseBinFunction'
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            const decodedBody = atob(event.body);
            const parsedBody = JSON.parse(decodedBody.toString('utf8'));
            return parsedBody;
          };
      Runtime: nodejs20.x

  ReturnRawBodyLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Sub '${AWS::StackName}-ReturnRawBodyFunction'
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event, context, callback) => {
            console.log(event);
            callback(null, event.body);
          };
      Runtime: nodejs20.x

  ReturnFullEventLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Sub '${AWS::StackName}-ReturnFullEventFunction'
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            return {
              statusCode: 200,
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(event)
            };
          };
      Runtime: nodejs20.x

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'

  # ParseAndReturnBody APIs
  ParseAndReturnBodyRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: !Sub '${AWS::StackName}-ParseAndReturnBodyRestAPI'
      EndpointConfiguration:
        Types:
          - REGIONAL

  ParseAndReturnBodyRestApiResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt ParseAndReturnBodyRestApi.RootResourceId
      PathPart: 'test'
      RestApiId: !Ref ParseAndReturnBodyRestApi

  ParseAndReturnBodyRestApiMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref ParseAndReturnBodyRestApiResource
      RestApiId: !Ref ParseAndReturnBodyRestApi
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParseAndReturnBodyLambdaFunction.Arn}/invocations'

  ParseAndReturnBodyRestApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn: ParseAndReturnBodyRestApiMethod
    Properties:
      RestApiId: !Ref ParseAndReturnBodyRestApi
      StageName: 'test'

  ParseAndReturnBodyHttpApiV1:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      Name: !Sub '${AWS::StackName}-ParseAndReturnBodyHttpAPIv1'
      ProtocolType: HTTP

  ParseAndReturnBodyHttpApiV1Integration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref ParseAndReturnBodyHttpApiV1
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt ParseAndReturnBodyLambdaFunction.Arn
      PayloadFormatVersion: '1.0'

  ParseAndReturnBodyHttpApiV1Route:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref ParseAndReturnBodyHttpApiV1
      RouteKey: 'POST /test'
      Target: !Join
        - /
        - - integrations
          - !Ref ParseAndReturnBodyHttpApiV1Integration

  ParseAndReturnBodyHttpApiV1Stage:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      ApiId: !Ref ParseAndReturnBodyHttpApiV1
      StageName: '$default'
      AutoDeploy: true

  ParseAndReturnBodyHttpApiV2:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      Name: !Sub '${AWS::StackName}-ParseAndReturnBodyHttpAPIv2'
      ProtocolType: HTTP

  ParseAndReturnBodyHttpApiV2Integration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref ParseAndReturnBodyHttpApiV2
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt ParseAndReturnBodyLambdaFunction.Arn
      PayloadFormatVersion: '2.0'

  ParseAndReturnBodyHttpApiV2Route:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref ParseAndReturnBodyHttpApiV2
      RouteKey: 'POST /test'
      Target: !Join
        - /
        - - integrations
          - !Ref ParseAndReturnBodyHttpApiV2Integration

  ParseAndReturnBodyHttpApiV2Stage:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      ApiId: !Ref ParseAndReturnBodyHttpApiV2
      StageName: '$default'
      AutoDeploy: true

  # ReturnRawBody APIs
  ReturnRawBodyRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: !Sub '${AWS::StackName}-ReturnRawBodyRestAPI'
      EndpointConfiguration:
        Types:
          - REGIONAL

  ReturnRawBodyRestApiResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt ReturnRawBodyRestApi.RootResourceId
      PathPart: 'test'
      RestApiId: !Ref ReturnRawBodyRestApi

  ReturnRawBodyRestApiMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref ReturnRawBodyRestApiResource
      RestApiId: !Ref ReturnRawBodyRestApi
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ReturnRawBodyLambdaFunction.Arn}/invocations'

  ReturnRawBodyRestApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn: ReturnRawBodyRestApiMethod
    Properties:
      RestApiId: !Ref ReturnRawBodyRestApi
      StageName: 'test'

  ReturnRawBodyHttpApiV1:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      Name: !Sub '${AWS::StackName}-ReturnRawBodyHttpAPIv1'
      ProtocolType: HTTP

  ReturnRawBodyHttpApiV1Integration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref ReturnRawBodyHttpApiV1
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt ReturnRawBodyLambdaFunction.Arn
      PayloadFormatVersion: '1.0'

  ReturnRawBodyHttpApiV1Route:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref ReturnRawBodyHttpApiV1
      RouteKey: 'POST /test'
      Target: !Join
        - /
        - - integrations
          - !Ref ReturnRawBodyHttpApiV1Integration

  ReturnRawBodyHttpApiV1Stage:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      ApiId: !Ref ReturnRawBodyHttpApiV1
      StageName: '$default'
      AutoDeploy: true

  ReturnRawBodyHttpApiV2:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      Name: !Sub '${AWS::StackName}-ReturnRawBodyHttpAPIv2'
      ProtocolType: HTTP

  ReturnRawBodyHttpApiV2Integration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref ReturnRawBodyHttpApiV2
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt ReturnRawBodyLambdaFunction.Arn
      PayloadFormatVersion: '2.0'

  ReturnRawBodyHttpApiV2Route:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref ReturnRawBodyHttpApiV2
      RouteKey: 'POST /test'
      Target: !Join
        - /
        - - integrations
          - !Ref ReturnRawBodyHttpApiV2Integration

  ReturnRawBodyHttpApiV2Stage:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      ApiId: !Ref ReturnRawBodyHttpApiV2
      StageName: '$default'
      AutoDeploy: true

  # ReturnFullEvent APIs
  ReturnFullEventRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: !Sub '${AWS::StackName}-ReturnFullEventRestAPI'
      EndpointConfiguration:
        Types:
          - REGIONAL

  ReturnFullEventRestApiResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt ReturnFullEventRestApi.RootResourceId
      PathPart: 'test'
      RestApiId: !Ref ReturnFullEventRestApi

  ReturnFullEventRestApiMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref ReturnFullEventRestApiResource
      RestApiId: !Ref ReturnFullEventRestApi
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ReturnFullEventLambdaFunction.Arn}/invocations'

  ReturnFullEventRestApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn: ReturnFullEventRestApiMethod
    Properties:
      RestApiId: !Ref ReturnFullEventRestApi
      StageName: 'test'

  ReturnFullEventHttpApiV1:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      Name: !Sub '${AWS::StackName}-ReturnFullEventHttpAPIv1'
      ProtocolType: HTTP

  ReturnFullEventHttpApiV1Integration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref ReturnFullEventHttpApiV1
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt ReturnFullEventLambdaFunction.Arn
      PayloadFormatVersion: '1.0'

  ReturnFullEventHttpApiV1Route:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref ReturnFullEventHttpApiV1
      RouteKey: 'POST /test'
      Target: !Join
        - /
        - - integrations
          - !Ref ReturnFullEventHttpApiV1Integration

  ReturnFullEventHttpApiV1Stage:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      ApiId: !Ref ReturnFullEventHttpApiV1
      StageName: '$default'
      AutoDeploy: true

  ReturnFullEventHttpApiV2:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      Name: !Sub '${AWS::StackName}-ReturnFullEventHttpAPIv2'
      ProtocolType: HTTP

  ReturnFullEventHttpApiV2Integration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref ReturnFullEventHttpApiV2
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt ReturnFullEventLambdaFunction.Arn
      PayloadFormatVersion: '2.0'

  ReturnFullEventHttpApiV2Route:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref ReturnFullEventHttpApiV2
      RouteKey: 'POST /test'
      Target: !Join
        - /
        - - integrations
          - !Ref ReturnFullEventHttpApiV2Integration

  ReturnFullEventHttpApiV2Stage:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      ApiId: !Ref ReturnFullEventHttpApiV2
      StageName: '$default'
      AutoDeploy: true

  # Lambda Permissions
  LambdaPermissionParseAndReturnBodyRestApi:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ParseAndReturnBodyLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ParseAndReturnBodyRestApi}/*'

  LambdaPermissionParseAndReturnBodyHttpApiV1:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ParseAndReturnBodyLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ParseAndReturnBodyHttpApiV1}/*'

  LambdaPermissionParseAndReturnBodyHttpApiV2:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ParseAndReturnBodyLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ParseAndReturnBodyHttpApiV2}/*'

  LambdaPermissionReturnRawBodyRestApi:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ReturnRawBodyLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ReturnRawBodyRestApi}/*'

  LambdaPermissionReturnRawBodyHttpApiV1:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ReturnRawBodyLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ReturnRawBodyHttpApiV1}/*'

  LambdaPermissionReturnRawBodyHttpApiV2:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ReturnRawBodyLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ReturnRawBodyHttpApiV2}/*'

  LambdaPermissionReturnFullEventRestApi:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ReturnFullEventLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ReturnFullEventRestApi}/*'

  LambdaPermissionReturnFullEventHttpApiV1:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ReturnFullEventLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ReturnFullEventHttpApiV1}/*'

  LambdaPermissionReturnFullEventHttpApiV2:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ReturnFullEventLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ReturnFullEventHttpApiV2}/*'

  ReturnDecodedParseBinRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: !Sub '${AWS::StackName}-ReturnDecodedParseBinRestAPI'
      EndpointConfiguration:
        Types:
          - REGIONAL
      BinaryMediaTypes:
        - '*/*'

  ReturnDecodedParseBinRestApiResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt ReturnDecodedParseBinRestApi.RootResourceId
      PathPart: 'test'
      RestApiId: !Ref ReturnDecodedParseBinRestApi

  ReturnDecodedParseBinRestApiMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref ReturnDecodedParseBinRestApiResource
      RestApiId: !Ref ReturnDecodedParseBinRestApi
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ReturnDecodedParseBinLambdaFunction.Arn}/invocations'

  ReturnDecodedParseBinRestApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn: ReturnDecodedParseBinRestApiMethod
    Properties:
      RestApiId: !Ref ReturnDecodedParseBinRestApi
      StageName: 'test'

  LambdaPermissionReturnDecodedParseBinRestApi:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ReturnDecodedParseBinLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ReturnDecodedParseBinRestApi}/*'

Outputs:
  ParseAndReturnBodyRestApiId:
    Description: 'ID of the Parse and Return Body REST API'
    Value: !Ref ParseAndReturnBodyRestApi

  ParseAndReturnBodyRestApiUrl:
    Description: 'URL of the Parse and Return Body REST API'
    Value: !Sub 'https://${ParseAndReturnBodyRestApi}.execute-api.${AWS::Region}.amazonaws.com/test/test'

  ParseAndReturnBodyHttpApiV1Id:
    Description: 'ID of the Parse and Return Body HTTP API v1'
    Value: !Ref ParseAndReturnBodyHttpApiV1

  ParseAndReturnBodyHttpApiV1Url:
    Description: 'URL of the Parse and Return Body HTTP API v1'
    Value: !Sub 'https://${ParseAndReturnBodyHttpApiV1}.execute-api.${AWS::Region}.amazonaws.com/test'

  ParseAndReturnBodyHttpApiV2Id:
    Description: 'ID of the Parse and Return Body HTTP API v2'
    Value: !Ref ParseAndReturnBodyHttpApiV2

  ParseAndReturnBodyHttpApiV2Url:
    Description: 'URL of the Parse and Return Body HTTP API v2'
    Value: !Sub 'https://${ParseAndReturnBodyHttpApiV2}.execute-api.${AWS::Region}.amazonaws.com/test'

  ReturnRawBodyRestApiId:
    Description: 'ID of the Return Raw Body REST API'
    Value: !Ref ReturnRawBodyRestApi

  ReturnRawBodyRestApiUrl:
    Description: 'URL of the Return Raw Body REST API'
    Value: !Sub 'https://${ReturnRawBodyRestApi}.execute-api.${AWS::Region}.amazonaws.com/test/test'

  ReturnRawBodyHttpApiV1Id:
    Description: 'ID of the Return Raw Body HTTP API v1'
    Value: !Ref ReturnRawBodyHttpApiV1

  ReturnRawBodyHttpApiV1Url:
    Description: 'URL of the Return Raw Body HTTP API v1'
    Value: !Sub 'https://${ReturnRawBodyHttpApiV1}.execute-api.${AWS::Region}.amazonaws.com/test'

  ReturnRawBodyHttpApiV2Id:
    Description: 'ID of the Return Raw Body HTTP API v2'
    Value: !Ref ReturnRawBodyHttpApiV2

  ReturnRawBodyHttpApiV2Url:
    Description: 'URL of the Return Raw Body HTTP API v2'
    Value: !Sub 'https://${ReturnRawBodyHttpApiV2}.execute-api.${AWS::Region}.amazonaws.com/test'

  ReturnFullEventRestApiId:
    Description: 'ID of the Return Full Event REST API'
    Value: !Ref ReturnFullEventRestApi

  ReturnFullEventRestApiUrl:
    Description: 'URL of the Return Full Event REST API'
    Value: !Sub 'https://${ReturnFullEventRestApi}.execute-api.${AWS::Region}.amazonaws.com/test/test'

  ReturnFullEventHttpApiV1Id:
    Description: 'ID of the Return Full Event HTTP API v1'
    Value: !Ref ReturnFullEventHttpApiV1

  ReturnFullEventHttpApiV1Url:
    Description: 'URL of the Return Full Event HTTP API v1'
    Value: !Sub 'https://${ReturnFullEventHttpApiV1}.execute-api.${AWS::Region}.amazonaws.com/test'

  ReturnFullEventHttpApiV2Id:
    Description: 'ID of the Return Full Event HTTP API v2'
    Value: !Ref ReturnFullEventHttpApiV2

  ReturnFullEventHttpApiV2Url:
    Description: 'URL of the Return Full Event HTTP API v2'
    Value: !Sub 'https://${ReturnFullEventHttpApiV2}.execute-api.${AWS::Region}.amazonaws.com/test'

  ParseAndReturnBodyLambdaFunctionArn:
    Description: 'ARN of the Parse and Return Body Lambda Function'
    Value: !GetAtt ParseAndReturnBodyLambdaFunction.Arn

  ReturnRawBodyLambdaFunctionArn:
    Description: 'ARN of the Return Raw Body Lambda Function'
    Value: !GetAtt ReturnRawBodyLambdaFunction.Arn

  ReturnFullEventLambdaFunctionArn:
    Description: 'ARN of the Return Full Event Lambda Function'
    Value: !GetAtt ReturnFullEventLambdaFunction.Arn

  ReturnDecodedParseBinRestApiId:
      Description: 'ID of the ReturnDecodedParseBin Media REST API'
      Value: !Ref ReturnDecodedParseBinRestApi

  ReturnDecodedParseBinRestApiUrl:
      Description: 'URL of the ReturnDecodedParseBin Media REST API'
      Value: !Sub 'https://${ReturnDecodedParseBinRestApi}.execute-api.${AWS::Region}.amazonaws.com/test/test'
