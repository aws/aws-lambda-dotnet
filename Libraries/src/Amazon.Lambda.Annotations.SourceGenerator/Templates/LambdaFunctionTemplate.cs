// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Amazon.Lambda.Annotations.SourceGenerator.Templates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Amazon.Lambda.Annotations.SourceGenerator.Models;
    using Amazon.Lambda.Annotations.SourceGenerator.Extensions;
    using Amazon.Lambda.Annotations.SourceGenerator.Models.Attributes;
    using Microsoft.CodeAnalysis;
    using Amazon.Lambda.Annotations.SourceGenerator.Validation;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class LambdaFunctionTemplate : LambdaFunctionTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            
            #line 11 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

    foreach (var ns in _model.GeneratedMethod.Usings)
    {

            
            #line default
            #line hidden
            this.Write("using ");
            
            #line 15 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ns));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 16 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("\r\nnamespace ");
            
            #line 20 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ContainingNamespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    public class ");
            
            #line 22 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.GeneratedMethod.ContainingType.Name));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n");
            
            #line 24 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

    if (_model.LambdaMethod.UsingDependencyInjection)
    {

            
            #line default
            #line hidden
            this.Write("        private readonly ServiceProvider serviceProvider;\r\n");
            
            #line 29 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

    }
    else
    {

            
            #line default
            #line hidden
            this.Write("        private readonly ");
            
            #line 34 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ContainingType.Name));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 34 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ContainingType.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 35 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("\r\n        public ");
            
            #line 39 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.GeneratedMethod.ContainingType.Name));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            SetExecutionEnvironment();\r\n");
            
            #line 42 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

    if (_model.LambdaMethod.UsingDependencyInjection)
    {

            
            #line default
            #line hidden
            this.Write(@"            var services = new ServiceCollection();

            // By default, Lambda function class is added to the service container using the singleton lifetime
            // To use a different lifetime, specify the lifetime in Startup.ConfigureServices(IServiceCollection) method.
            services.AddSingleton<");
            
            #line 50 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ContainingType.Name));
            
            #line default
            #line hidden
            this.Write(">();\r\n\r\n            var startup = new ");
            
            #line 52 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.StartupType.FullName));
            
            #line default
            #line hidden
            this.Write("();\r\n            startup.ConfigureServices(services);\r\n            serviceProvide" +
                    "r = services.BuildServiceProvider();\r\n");
            
            #line 55 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

    }
    else
    {

            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 60 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ContainingType.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 60 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ContainingType.Name));
            
            #line default
            #line hidden
            this.Write("();\r\n");
            
            #line 61 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("        }\r\n\r\n        public ");
            
            #line 66 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ReturnsVoidOrGenericTask ? "async " : ""));
            
            #line default
            #line hidden
            
            #line 66 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.GeneratedMethod.ReturnType.FullName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 66 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 66 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(", ", _model.GeneratedMethod.Parameters.Select(p => $"{p.Type.FullName} {p.Name}"))));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n");
            
            #line 68 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

    if (_model.LambdaMethod.UsingDependencyInjection)
    {

            
            #line default
            #line hidden
            this.Write("            // Create a scope for every request,\r\n            // this allows crea" +
                    "ting scoped dependencies without creating a scope manually.\r\n            using v" +
                    "ar scope = serviceProvider.CreateScope();\r\n            var ");
            
            #line 75 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ContainingType.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" = scope.ServiceProvider.GetRequiredService<");
            
            #line 76 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ContainingType.Name));
            
            #line default
            #line hidden
            this.Write(">();\r\n\r\n");
            
            #line 78 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

    }

    if (_model.LambdaMethod.Events.Contains(EventType.API))
    {
        var parameters = string.Join(", ", _model.LambdaMethod.Parameters
            .Select(p =>
            {
                // Pass the same context parameter for ILambdaContext that comes from the generated method.
                if (p.Type.FullName == TypeFullNames.ILambdaContext)
                {
                    return "__context__";
                }

                // Pass the same request parameter for Request Type that comes from the generated method.
                if (TypeFullNames.Requests.Contains(p.Type.FullName))
                {
                    return "__request__";
                }

                return p.Name;
            }));
        var restApiAttribute = _model.LambdaMethod.Attributes.FirstOrDefault(att => att.Type.FullName == TypeFullNames.RestApiAttribute) as AttributeModel<Amazon.Lambda.Annotations.APIGateway.RestApiAttribute>;
        var httpApiAttribute = _model.LambdaMethod.Attributes.FirstOrDefault(att => att.Type.FullName == TypeFullNames.HttpApiAttribute) as AttributeModel<Amazon.Lambda.Annotations.APIGateway.HttpApiAttribute>;

        if (restApiAttribute != null && httpApiAttribute != null)
        {
            throw new NotSupportedException($"A method cannot have both {TypeFullNames.RestApiAttribute} and {TypeFullNames.HttpApiAttribute} attribute at the same time.");
        }

        var routeParameters = restApiAttribute?.Data?.GetTemplateParameters() ?? httpApiAttribute?.Data?.GetTemplateParameters() ?? new HashSet<string>();

        var (routeTemplateValid, missingRouteParams) = RouteParametersValidator.Validate(routeParameters, _model.LambdaMethod.Parameters);
        if (!routeTemplateValid)
        {
            var template = restApiAttribute?.Data?.Template ?? httpApiAttribute?.Data?.Template ?? string.Empty;
            throw new InvalidOperationException($"Route template {template} is invalid. Missing {string.Join(",", missingRouteParams)} parameters in method definition.");
        }

        if (_model.LambdaMethod.Parameters.HasConvertibleParameter())
        {

            
            #line default
            #line hidden
            this.Write("            var validationErrors = new List<string>();\r\n\r\n");
            
            #line 122 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

        }

        foreach (var parameter in _model.LambdaMethod.Parameters)
        {
            if (parameter.Type.FullName == TypeFullNames.ILambdaContext || TypeFullNames.Requests.Contains(parameter.Type.FullName))
            {
                // No action required for ILambdaContext and RequestType, they are passed from the generated method parameter directly to the original method.
            }
            else if (parameter.Attributes.Any(att => att.Type.FullName == TypeFullNames.FromServiceAttribute))
            {

            
            #line default
            #line hidden
            this.Write("            var ");
            
            #line 134 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write(" = scope.ServiceProvider.GetRequiredService<");
            
            #line 134 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type.FullName));
            
            #line default
            #line hidden
            this.Write(">();\r\n");
            
            #line 135 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

            }
            else if (parameter.Attributes.Any(att => att.Type.FullName == TypeFullNames.FromQueryAttribute))
            {
                var fromQueryAttribute = parameter.Attributes.First(att => att.Type.FullName == TypeFullNames.FromQueryAttribute) as AttributeModel<Amazon.Lambda.Annotations.APIGateway.FromQueryAttribute>;

                // Use parameter name as key, if Name has not specified explicitly in the attribute definition.
                var parameterKey = fromQueryAttribute?.Data?.Name ?? parameter.Name;

                var queryStringParameters = "QueryStringParameters";


            
            #line default
            #line hidden
            this.Write("            var ");
            
            #line 147 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write(" = default(");
            
            #line 147 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type.FullName));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 148 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"


                if (parameter.Type.IsEnumerable && parameter.Type.IsGenericType)
                {
                    // In HTTP API V2 multiple values for the same parameter are represented via comma separated string
                    // Therefore, it is required to split the string to convert to an enumerable
                    // and convert individual item to target data type.
                    var commaSplit = "";
                    if (httpApiAttribute?.Data.Version == Amazon.Lambda.Annotations.APIGateway.HttpApiVersion.V2)
                    {
                        commaSplit = @".Split("","")";
                    }

                    // HTTP API V1 and Rest API, multiple values for the same parameter are provided
                    // dedicated dictionary of string key and list value.
                    if (restApiAttribute != null || httpApiAttribute?.Data.Version == Amazon.Lambda.Annotations.APIGateway.HttpApiVersion.V1)
                    {
                        queryStringParameters = "MultiValueQueryStringParameters";
                    }

                    if (parameter.Type.TypeArguments.Count != 1)
                    {
                        throw new NotSupportedException("Only one type argument is supported for generic types.");
                    }

                    // Generic types are mapped using Select statement to the target parameter type argument.
                    var typeArgument = parameter.Type.TypeArguments.First();

            
            #line default
            #line hidden
            this.Write("            if (__request__.");
            
            #line 176 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(queryStringParameters));
            
            #line default
            #line hidden
            this.Write("?.ContainsKey(\"");
            
            #line 176 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameterKey));
            
            #line default
            #line hidden
            this.Write("\") == true)\r\n            {\r\n                ");
            
            #line 178 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write(" = __request__.");
            
            #line 178 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(queryStringParameters));
            
            #line default
            #line hidden
            this.Write("[\"");
            
            #line 178 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameterKey));
            
            #line default
            #line hidden
            this.Write("\"]");
            
            #line 178 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(commaSplit));
            
            #line default
            #line hidden
            this.Write("\r\n                    .Select(q =>\r\n                    {\r\n                      " +
                    "  try\r\n                        {\r\n                            return (");
            
            #line 183 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typeArgument.FullName));
            
            #line default
            #line hidden
            this.Write(")Convert.ChangeType(q, typeof(");
            
            #line 183 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typeArgument.FullName));
            
            #line default
            #line hidden
            this.Write(@"));
                        }
                        catch (Exception e) when (e is InvalidCastException || e is FormatException || e is OverflowException || e is ArgumentException)
                        {
                            validationErrors.Add($""Value {q} at '");
            
            #line 187 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameterKey));
            
            #line default
            #line hidden
            this.Write("\' failed to satisfy constraint: {e.Message}\");\r\n                            retur" +
                    "n default;\r\n                        }\r\n                    })\r\n                 " +
                    "   .ToList();\r\n            }\r\n\r\n");
            
            #line 194 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

                }
                else
                {
                    // Non-generic types are mapped directly to the target parameter.

            
            #line default
            #line hidden
            this.Write("            if (__request__.");
            
            #line 200 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(queryStringParameters));
            
            #line default
            #line hidden
            this.Write("?.ContainsKey(\"");
            
            #line 200 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameterKey));
            
            #line default
            #line hidden
            this.Write("\") == true)\r\n            {\r\n                try\r\n                {\r\n             " +
                    "       ");
            
            #line 204 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 204 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type.FullName));
            
            #line default
            #line hidden
            this.Write(")Convert.ChangeType(__request__.");
            
            #line 204 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(queryStringParameters));
            
            #line default
            #line hidden
            this.Write("[\"");
            
            #line 204 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameterKey));
            
            #line default
            #line hidden
            this.Write("\"], typeof(");
            
            #line 204 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type.FullName));
            
            #line default
            #line hidden
            this.Write("));\r\n                }\r\n                catch (Exception e) when (e is InvalidCas" +
                    "tException || e is FormatException || e is OverflowException || e is ArgumentExc" +
                    "eption)\r\n                {\r\n                    validationErrors.Add($\"Value {__" +
                    "request__.");
            
            #line 208 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(queryStringParameters));
            
            #line default
            #line hidden
            this.Write("[\"");
            
            #line 208 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameterKey));
            
            #line default
            #line hidden
            this.Write("\"]} at \'");
            
            #line 208 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameterKey));
            
            #line default
            #line hidden
            this.Write("\' failed to satisfy constraint: {e.Message}\");\r\n                }\r\n            }\r" +
                    "\n\r\n");
            
            #line 212 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

                }

            }
            else if (parameter.Attributes.Any(att => att.Type.FullName == TypeFullNames.FromHeaderAttribute))
            {
                var fromHeaderAttribute =
                    parameter.Attributes.First(att => att.Type.FullName == TypeFullNames.FromHeaderAttribute) as
                        AttributeModel<Amazon.Lambda.Annotations.APIGateway.FromHeaderAttribute>;

                // Use parameter name as key, if Name has not specified explicitly in the attribute definition.
                var headerKey = fromHeaderAttribute?.Data?.Name ?? parameter.Name;

                var headers = "Headers";


            
            #line default
            #line hidden
            this.Write("            var ");
            
            #line 228 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write(" = default(");
            
            #line 228 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type.FullName));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 229 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"


                if (parameter.Type.IsEnumerable && parameter.Type.IsGenericType)
                {
                    // In HTTP API V2 multiple values for the same header are represented via comma separated string
                    // Therefore, it is required to split the string to convert to an enumerable
                    // and convert individual item to target data type.
                    var commaSplit = "";
                    if (httpApiAttribute?.Data.Version == Amazon.Lambda.Annotations.APIGateway.HttpApiVersion.V2)
                    {
                        commaSplit = @".Split("","")";
                    }

                    // HTTP API V1 and Rest API, multiple values for the same header are provided
                    // dedicated dictionary of string key and list value.
                    if (restApiAttribute != null || httpApiAttribute?.Data.Version == Amazon.Lambda.Annotations.APIGateway.HttpApiVersion.V1)
                    {
                        headers = "MultiValueHeaders";
                    }

                    if (parameter.Type.TypeArguments.Count != 1)
                    {
                        throw new NotSupportedException("Only one type argument is supported for generic types.");
                    }

                    // Generic types are mapped using Select statement to the target parameter type argument.
                    var typeArgument = parameter.Type.TypeArguments.First();

            
            #line default
            #line hidden
            this.Write("            if (__request__.");
            
            #line 257 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(headers));
            
            #line default
            #line hidden
            this.Write("?.ContainsKey(\"");
            
            #line 257 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(headerKey));
            
            #line default
            #line hidden
            this.Write("\") == true)\r\n            {\r\n                ");
            
            #line 259 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write(" = __request__.");
            
            #line 259 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(headers));
            
            #line default
            #line hidden
            this.Write("[\"");
            
            #line 259 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(headerKey));
            
            #line default
            #line hidden
            this.Write("\"]");
            
            #line 259 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(commaSplit));
            
            #line default
            #line hidden
            this.Write("\r\n                    .Select(q =>\r\n                    {\r\n                      " +
                    "  try\r\n                        {\r\n                            return (");
            
            #line 264 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typeArgument.FullName));
            
            #line default
            #line hidden
            this.Write(")Convert.ChangeType(q, typeof(");
            
            #line 264 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typeArgument.FullName));
            
            #line default
            #line hidden
            this.Write(@"));
                        }
                        catch (Exception e) when (e is InvalidCastException || e is FormatException || e is OverflowException || e is ArgumentException)
                        {
                        validationErrors.Add($""Value {q} at '");
            
            #line 268 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(headerKey));
            
            #line default
            #line hidden
            this.Write("\' failed to satisfy constraint: {e.Message}\");\r\n                            retur" +
                    "n default;\r\n                        }\r\n                    })\r\n                 " +
                    "   .ToList();\r\n            }\r\n\r\n");
            
            #line 275 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

                }
                else
                {
                    // Non-generic types are mapped directly to the target parameter.

            
            #line default
            #line hidden
            this.Write("            if (__request__.");
            
            #line 281 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(headers));
            
            #line default
            #line hidden
            this.Write("?.ContainsKey(\"");
            
            #line 281 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(headerKey));
            
            #line default
            #line hidden
            this.Write("\") == true)\r\n            {\r\n                try\r\n                {\r\n             " +
                    "       ");
            
            #line 285 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 285 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type.FullName));
            
            #line default
            #line hidden
            this.Write(")Convert.ChangeType(__request__.");
            
            #line 285 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(headers));
            
            #line default
            #line hidden
            this.Write("[\"");
            
            #line 285 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(headerKey));
            
            #line default
            #line hidden
            this.Write("\"], typeof(");
            
            #line 285 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type.FullName));
            
            #line default
            #line hidden
            this.Write("));\r\n                }\r\n                catch (Exception e) when (e is InvalidCas" +
                    "tException || e is FormatException || e is OverflowException || e is ArgumentExc" +
                    "eption)\r\n                {\r\n                    validationErrors.Add($\"Value {__" +
                    "request__.");
            
            #line 289 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(headers));
            
            #line default
            #line hidden
            this.Write("[\"");
            
            #line 289 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(headerKey));
            
            #line default
            #line hidden
            this.Write("\"]} at \'");
            
            #line 289 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(headerKey));
            
            #line default
            #line hidden
            this.Write("\' failed to satisfy constraint: {e.Message}\");\r\n                }\r\n            }\r" +
                    "\n\r\n");
            
            #line 293 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

                }
            }
            else if (parameter.Attributes.Any(att => att.Type.FullName == TypeFullNames.FromBodyAttribute))
            {
                // string parameter does not need to be de-serialized
                if (parameter.Type.IsString())
                {
 
            
            #line default
            #line hidden
            this.Write("            var ");
            
            #line 302 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write(" = __request__.Body;\r\n\r\n");
            
            #line 304 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

                }
                else
                {
 
            
            #line default
            #line hidden
            this.Write("            var ");
            
            #line 309 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write(" = default(");
            
            #line 309 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type.FullName));
            
            #line default
            #line hidden
            this.Write(");\r\n            try\r\n            {\r\n                ");
            
            #line 312 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 312 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.Serializer));
            
            #line default
            #line hidden
            this.Write(".Deserialize<");
            
            #line 312 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type.FullName));
            
            #line default
            #line hidden
            this.Write(">(__request__.Body);\r\n            }\r\n            catch (Exception e)\r\n           " +
                    " {\r\n                validationErrors.Add($\"Value {__request__.Body} at \'body\' fa" +
                    "iled to satisfy constraint: {e.Message}\");\r\n            }\r\n\r\n");
            
            #line 319 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

                }
            }
            else if (parameter.Attributes.Any(att => att.Type.FullName == TypeFullNames.FromRouteAttribute) || routeParameters.Contains(parameter.Name))
            {
                var fromRouteAttribute = parameter.Attributes?.FirstOrDefault(att => att.Type.FullName == TypeFullNames.FromRouteAttribute) as AttributeModel<Amazon.Lambda.Annotations.APIGateway.FromRouteAttribute>;

                // Use parameter name as key, if Name has not specified explicitly in the attribute definition.
                var routeKey = fromRouteAttribute?.Data?.Name ?? parameter.Name;

            
            #line default
            #line hidden
            this.Write("            var ");
            
            #line 329 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write(" = default(");
            
            #line 329 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type.FullName));
            
            #line default
            #line hidden
            this.Write(");\r\n            if (__request__.PathParameters?.ContainsKey(\"");
            
            #line 330 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routeKey));
            
            #line default
            #line hidden
            this.Write("\") == true)\r\n            {\r\n                try\r\n                {\r\n             " +
                    "       ");
            
            #line 334 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 334 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type.FullName));
            
            #line default
            #line hidden
            this.Write(")Convert.ChangeType(__request__.PathParameters[\"");
            
            #line 334 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routeKey));
            
            #line default
            #line hidden
            this.Write("\"], typeof(");
            
            #line 334 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type.FullName));
            
            #line default
            #line hidden
            this.Write(@"));
                }
                catch (Exception e) when (e is InvalidCastException || e is FormatException || e is OverflowException || e is ArgumentException)
                {
                    validationErrors.Add($""Value {__request__.PathParameters[""");
            
            #line 338 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routeKey));
            
            #line default
            #line hidden
            this.Write("\"]} at \'");
            
            #line 338 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routeKey));
            
            #line default
            #line hidden
            this.Write("\' failed to satisfy constraint: {e.Message}\");\r\n                }\r\n            }\r" +
                    "\n\r\n");
            
            #line 342 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

            }
            else
            {
                throw new NotSupportedException($"{parameter.Name} parameter of type {parameter.Type.FullName} passing is not supported.");
            }
        }

        if (_model.LambdaMethod.Parameters.HasConvertibleParameter())
        {

            
            #line default
            #line hidden
            this.Write("            // return 400 Bad Request if there exists a validation error\r\n       " +
                    "     if (validationErrors.Any())\r\n            {\r\n                var errorResult" +
                    " = new ");
            
            #line 356 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(restApiAttribute != null || httpApiAttribute?.Data.Version == Amazon.Lambda.Annotations.APIGateway.HttpApiVersion.V1 ? "Amazon.Lambda.APIGatewayEvents.APIGatewayProxyResponse" : "Amazon.Lambda.APIGatewayEvents.APIGatewayHttpApiV2ProxyResponse"));
            
            #line default
            #line hidden
            this.Write(@"
                {
                    Body = @$""{{""""message"""": """"{validationErrors.Count} validation error(s) detected: {string.Join("","", validationErrors)}""""}}"",
                    Headers = new Dictionary<string, string>
                    {
                        {""Content-Type"", ""application/json""},
                        {""x-amzn-ErrorType"", ""ValidationException""}
                    },
                    StatusCode = 400
                };
");
            
            #line 366 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

                if(_model.LambdaMethod.ReturnsIHttpResults)
                {

            
            #line default
            #line hidden
            this.Write("                var errorStream = new System.IO.MemoryStream();\r\n                " +
                    "System.Text.Json.JsonSerializer.Serialize(errorStream, errorResult);\r\n          " +
                    "      return errorStream;\r\n");
            
            #line 373 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

                }
                else
                {

            
            #line default
            #line hidden
            this.Write("                return errorResult;\r\n");
            
            #line 379 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

                }

            
            #line default
            #line hidden
            this.Write("            }\r\n\r\n");
            
            #line 384 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

        }

        if (_model.LambdaMethod.ReturnsIHttpResults)
        {

            
            #line default
            #line hidden
            this.Write("            var httpResults = ");
            
            #line 390 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ReturnsGenericTask ? "await " : ""));
            
            #line default
            #line hidden
            
            #line 390 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ContainingType.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 390 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 390 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameters));
            
            #line default
            #line hidden
            this.Write(");\r\n            HttpResultSerializationOptions.ProtocolFormat serializationFormat" +
                    " = ");
            
            #line 391 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(restApiAttribute != null ? "HttpResultSerializationOptions.ProtocolFormat.RestApi" : "HttpResultSerializationOptions.ProtocolFormat.HttpApi"));
            
            #line default
            #line hidden
            this.Write(";\r\n            HttpResultSerializationOptions.ProtocolVersion serializationVersio" +
                    "n = ");
            
            #line 392 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(restApiAttribute != null || httpApiAttribute?.Data.Version == Amazon.Lambda.Annotations.APIGateway.HttpApiVersion.V1 ? "HttpResultSerializationOptions.ProtocolVersion.V1" : "HttpResultSerializationOptions.ProtocolVersion.V2"));
            
            #line default
            #line hidden
            this.Write(";\r\n            var serializationOptions = new HttpResultSerializationOptions { Fo" +
                    "rmat = serializationFormat, Version = serializationVersion };\r\n            var r" +
                    "esponse = httpResults.Serialize(serializationOptions);\r\n");
            
            #line 395 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

        }
        else if (_model.LambdaMethod.ReturnsVoid)
        {

            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 400 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ContainingType.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 400 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 400 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameters));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 401 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

        }
        else if (_model.LambdaMethod.ReturnsVoidTask)
        {

            
            #line default
            #line hidden
            this.Write("            await ");
            
            #line 406 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ContainingType.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 406 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 406 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameters));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 407 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write("            var response = ");
            
            #line 412 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ReturnsGenericTask ? "await " : ""));
            
            #line default
            #line hidden
            
            #line 412 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ContainingType.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 412 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 412 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameters));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 413 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

        }

        if (_model.GeneratedMethod.ReturnType.FullName == _model.LambdaMethod.ReturnType.FullName || _model.LambdaMethod.ReturnsIHttpResults)
        {

            
            #line default
            #line hidden
            this.Write("            return response;\r\n");
            
            #line 420 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

        }
        else
        {
            if (!_model.LambdaMethod.ReturnsVoid && !_model.LambdaMethod.ReturnsVoidTask)
            {
                if (_model.LambdaMethod.ReturnType.IsValueType)
                {

            
            #line default
            #line hidden
            this.Write("\r\n            var body = response.ToString();\r\n");
            
            #line 431 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

                }
                else if (_model.LambdaMethod.ReturnType.IsString())
                {
                    // no action
                }
                else
                {

            
            #line default
            #line hidden
            this.Write("\r\n            var body = ");
            
            #line 441 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.Serializer));
            
            #line default
            #line hidden
            this.Write(".Serialize(response);\r\n");
            
            #line 442 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

                }
            }

            
            #line default
            #line hidden
            this.Write("\r\n            return new ");
            
            #line 447 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ReturnsVoidOrGenericTask ? _model.GeneratedMethod.ReturnType.TaskTypeArgument : _model.GeneratedMethod.ReturnType.FullName));
            
            #line default
            #line hidden
            this.Write("\r\n            {\r\n");
            
            #line 449 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

            if (!_model.LambdaMethod.ReturnsVoid && !_model.LambdaMethod.ReturnsVoidTask)
            {

            
            #line default
            #line hidden
            this.Write("                Body = ");
            
            #line 453 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ReturnType.IsString() ? "response" : "body"));
            
            #line default
            #line hidden
            this.Write(",\r\n                Headers = new Dictionary<string, string>\r\n                {\r\n " +
                    "                   {\"Content-Type\", ");
            
            #line 456 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ReturnType.IsString() ? "\"text/plain\"" : "\"application/json\""));
            
            #line default
            #line hidden
            this.Write("}\r\n                },\r\n");
            
            #line 458 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("                StatusCode = 200\r\n            };\r\n");
            
            #line 463 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

        }
    }
    else if (_model.LambdaMethod.Events.Count == 0)
    {
        var parameters = string.Join(", ", _model.LambdaMethod.Parameters
            .Select(p =>
            {
                // Pass the same context parameter for ILambdaContext that comes from the generated method.
                if (p.Type.FullName == TypeFullNames.ILambdaContext)
                {
                    return "__context__";
                }

                return p.Name;
            }));

        foreach (var parameter in _model.LambdaMethod.Parameters)
        {
            if (parameter.Attributes.Any(att => att.Type.FullName == TypeFullNames.FromServiceAttribute))
            {

            
            #line default
            #line hidden
            this.Write("            var ");
            
            #line 485 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write(" = scope.ServiceProvider.GetRequiredService<");
            
            #line 485 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type.FullName));
            
            #line default
            #line hidden
            this.Write(">();\r\n");
            
            #line 486 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

            }
        }

        if (_model.LambdaMethod.ReturnsVoid)
        {

            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 493 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ContainingType.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 493 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 493 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameters));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 494 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

        }
        else if (_model.LambdaMethod.ReturnsVoidTask)
        {

            
            #line default
            #line hidden
            this.Write("            await ");
            
            #line 499 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ContainingType.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 499 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 499 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameters));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 500 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write("            return ");
            
            #line 505 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ReturnsGenericTask ? "await " : ""));
            
            #line default
            #line hidden
            
            #line 505 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.ContainingType.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 505 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.LambdaMethod.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 505 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameters));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 506 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"

        }
    }

            
            #line default
            #line hidden
            this.Write(@"        }

        private static void SetExecutionEnvironment()
        {
            const string envName = ""AWS_EXECUTION_ENV"";

            var envValue = new StringBuilder();

            // If there is an existing execution environment variable add the annotations package as a suffix.
            if(!string.IsNullOrEmpty(Environment.GetEnvironmentVariable(envName)))
            {
                envValue.Append($""{Environment.GetEnvironmentVariable(envName)}_"");
            }

            envValue.Append(""amazon-lambda-annotations_");
            
            #line 524 "C:\codebase\aws-lambda-dotnet\Libraries\src\Amazon.Lambda.Annotations.SourceGenerator\Templates\LambdaFunctionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.SourceGeneratorVersion));
            
            #line default
            #line hidden
            this.Write("\");\r\n\r\n            Environment.SetEnvironmentVariable(envName, envValue.ToString(" +
                    "));\r\n        }\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class LambdaFunctionTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
